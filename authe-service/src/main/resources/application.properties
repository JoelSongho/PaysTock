server.port=8087
spring.application.name=auth-service

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/paystock
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=postgres
spring.datasource.password=m

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Logging Configuration
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

# JWT Configuration
# Clé secrète Base64 valide (256 bits)
jwt.secret=F7hP6DQ1q0mS7k9Od4yRHS7Djc3ZVszq7vQ0h1ZmCwU=
jwt.expiration=86400000

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:5173
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=Authorization,Content-Type,X-Requested-With,Accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers
spring.web.cors.exposed-headers=Authorization,Content-Disposition
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Security Headers Configuration
security.headers.frame-options=DENY
security.headers.content-type-options=nosniff
security.headers.xss-protection=1; mode=block
security.headers.hsts.enabled=true
security.headers.hsts.max-age=31536000

# Brute Force Protection
security.brute-force.max-attempts=5
security.brute-force.lockout-duration=900000
security.brute-force.enabled=true

# Session Management (même avec JWT, pour la gestion des tokens actifs)
security.session.timeout=1800
security.session.max-concurrent=3
security.session.prevent-fixation=true

# JWT Security Enhancement
jwt.refresh-token.expiration=604800000
jwt.issuer=auth-service
jwt.audience=microservices-app
jwt.clock-skew=300000

# Token Blacklist Configuration (Redis)
security.jwt.blacklist.enabled=true
security.jwt.blacklist.cleanup-interval=3600000

# Account Security
security.account.max-login-attempts=5
security.account.lockout-duration=1800000
security.account.password-reset-token-expiration=3600000